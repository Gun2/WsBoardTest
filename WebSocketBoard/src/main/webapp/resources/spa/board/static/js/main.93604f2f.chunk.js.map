{"version":3,"sources":["logo.svg","board/BoardTable.js","board/ControlButton.js","board/Board.js","view/View.js","write/ControlButton.js","write/Write.js","App.js","reportWebVitals.js","index.js"],"names":["Paging","useState","page","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageManager","setPageManager","list","setList","fetch","a","axios","get","response","data","pageMaker","cri","perPageNum","totalCount","displayPageNum","console","log","useEffect","BoardTr","className","activePage","prevPageText","nextPageText","onChange","scope","style","width","map","l","to","id","title","sdate","view","ControlButton","type","float","Board","onClick","Content","content","setContent","setTitle","setView","View","match","params","withRouter","inputs","history","location","url","method","push","setInputs","onChangeTitle","e","target","name","value","placeholder","App","path","exact","component","Write","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93604f2f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Link } from 'react-router-dom';\nimport Pagination from \"react-js-pagination\";\n\nfunction Paging() {\n    const [pageManager, setPageManager] = useState({\n        page : 1,\n        itemsCountPerPage : 0,\n        totalItemsCount : 0,\n        pageRangeDisplayed : 0,\n    });\n    const {page,\n         itemsCountPerPage,\n         totalItemsCount,\n         pageRangeDisplayed} = pageManager;\n         \n    const [list, setList] = useState([]);\n    const fetch = async (page) => {\n        try {\n            const response = await axios.get(\n                '/api/board/list/' + page\n            );\n            setList(response.data.list);\n            var {pageMaker} = response.data;\n            var pageManager = {\n                page : pageMaker.cri.page,\n                itemsCountPerPage : pageMaker.cri.perPageNum,\n                totalItemsCount : pageMaker.totalCount,\n                pageRangeDisplayed : pageMaker.displayPageNum\n            }\n            setPageManager(pageManager);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    \n    useEffect(()=>{\n        fetch(1);\n    }, [])\n    \n    const handlePageChange = (page) => {\n            fetch(page);\n        }; \n        return (\n            <div>\n                <BoardTr className=\"table\" list={list} />\n                <Pagination activePage={page} \n                    itemsCountPerPage={itemsCountPerPage} \n                    totalItemsCount={totalItemsCount} \n                    pageRangeDisplayed={pageRangeDisplayed} \n                    prevPageText={\"‹\"} \n                    nextPageText={\"›\"} \n                    onChange={handlePageChange} />\n            </div>\n            );\n\n}\n\nfunction BoardTr({list}){\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\" style={{width:\"1200px\"}}>\n                        제목\n                    </th>\n                    <th scope=\"col\">\n                        작성자\n                    </th>\n                    <th scope=\"col\">\n                        등록일\n                    </th>\n                    <th scope=\"col\">\n                        조회수\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    list.map(l => (\n                        <tr key={l.id}>\n                            <th scope=\"row\">\n                                <Link to={`/spa/view/${l.id}`}>{l.title}</Link>\n                            </th>\n                            <td>\n                                TEST\n                            </td>\n                            <td>\n                                {l.sdate}\n                            </td>\n                            <td>\n                                {l.view}\n                            </td>\n                        </tr>\n                    ))\n                }\n            </tbody>\n\n        </table>\n    )\n}\n\nfunction BoardTable({ page }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const fetch = async () => {\n            try {\n                const response = await axios.get(\n                    './api/board/list/' + page\n                );\n                setList(response.data.list); // 데이터는 response.data 안에 들어있습니다.\n            } catch (e) {\n                console.log(e);\n            }\n            //setLoading(false);\n        };\n        fetch();\n    }, []);\n    return (\n        <div>\n            <BoardTr className=\"table\" list={list} />\n            <Paging />\n        </div>\n        \n        );\n}\n\nexport default Paging;","import react from 'react';\nimport { Link } from 'react-router-dom';\nfunction ControlButton(){\n    return (\n        <div className=\"controll-div\">\n            <Link to=\"/spa/write\">\n                <button type=\"button\" className=\"btn btn-dark\" style={{float:'right'}}>\n                    글쓰기\n                </button>\n            </Link>\n        </div>\n    )\n}\n\nexport default ControlButton;","import react from 'react';\nimport BoardTable from './BoardTable';\nimport ControlButton from './ControlButton';\n\nfunction Board(){\n    return (\n        <div>\n            <ControlButton />\n            <BoardTable page=\"1\"/>\n        </div>\n    );\n}\nexport default Board;","import react, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ControlButton({id}){\n\n    return (\n        <div className=\"controll-div\">\n            <div className=\"right\">\n                <Link to=\"/spa/list\"><button type=\"button\" className=\"btn btn-secondary\">목록</button></Link>\n                <button type=\"button\" onClick=\"modifyBoard()\" className=\"btn btn-success\">수정</button>\n                <button type=\"button\" onClick=\"deleteBoard()\" className=\"btn btn-danger\">삭제</button>\n            </div>\n        </div>\n    )\n}\n\nfunction Content({id}){\n    const [content, setContent] = useState();\n    const [title, setTitle] = useState();\n    const [view, setView] = useState();\n    \n    useEffect(() => {\n        const fetch = async (id) => {\n            try {\n                const response = await axios.get(\n                    '/api/board/view/' + id\n                );\n                var {content, id, view, title} = response.data.data;\n                setTitle(title);\n                setContent(content);\n                setView(view);\n            } catch (e) {\n                console.log(e);\n            }\n        };\n        fetch(id);\n    }, []);\n    return(\n        <div className=\"board-contain\">\n            <div className=\"view\">\n                <div className=\"view-inner\">\n                    {view}\n                </div>\n            </div>\n            <div className=\"title\">\n                {title}\n            </div>\n            <div className=\"content\">\n                <pre className=\"content-inner\">{content}</pre>\n            </div>\n        </div>\n    )\n}\n\nfunction View({match}){\n    const {id} = match.params;\n    return(\n    <div>\n        <ControlButton id={id}/>\n        <Content id={id}/>\n    </div>\n    )\n}\n\nexport default View;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ControlButton = ({ inputs,location, match, history }) => {\n   \n    async function save(){\n    \n        //console.log(inputs);\n        await axios({\n            url : '/api/board/',\n            method : 'post',\n            data : {\n                title : inputs.title,\n                content : inputs.content\n            }\n        })\n        history.push('/spa/list')\n    \n    }\n\n    return (\n        <div className=\"controll-div\">\n            <div className=\"right\">\n                <Link to=\"/spa/list\">\n                    <button type=\"button\" className=\"btn btn-secondary\"><i className=\"fas fa-bars\"></i> 목록</button>\n                </Link>\n                <button type=\"button\" onClick={save} className=\"btn btn-success\"><i className=\"fas fa-edit\"></i> 저장</button>\n            </div>\n        </div>\n    )\n  };\n  \n  export default withRouter(ControlButton);","import react, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\nimport ControlButton from './ControlButton';\n\nfunction Content(){\n    const [inputs, setInputs] = useState({\n        \"title\" : \"\",\n        \"content\" : \"\"\n    });\n    const {title, content} = inputs;\n    function onChangeTitle(e){\n        setInputs({\n            ...inputs,\n            [e.target.name] : e.target.value\n        })\n    }\n    return(\n        <div>\n            <ControlButton inputs={inputs}/>\n            <div className=\"board-contain\">\n                <div className=\"title\">\n                    <i className=\"fas fa-align-justify\"></i> \n                    <input style={{\"width\" : \"500px\"}} \n                        value={title}\n                        name=\"title\"\n                        type=\"text\" \n                        placeholder=\"게시판 제목\" \n                        onChange={onChangeTitle}/>\n                </div>\n                <div className=\"content\">\n                    <textarea \n                        className=\"content-inner\" \n                        value={content}\n                        name=\"content\"\n                        onChange={onChangeTitle}>\n                    </textarea>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction View({match}){\n    const {id} = match.params;\n    return(\n    \n        <Content />\n    \n    )\n}\n\nexport default View;","import logo from './logo.svg';\nimport './App.css';\nimport React, { useRef } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Board from './board/Board';\nimport View from './view/View'\nimport Write from './write/Write'\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/spa/view/:id\" exact={true} component={View} />\n        <Route path=\"/spa/write/\" exact={true} component={Write} />\n        <Route component={Board} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './board/style.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}